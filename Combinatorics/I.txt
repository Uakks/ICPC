#include <iostream>
#include <cmath>
#include <algorithm>
#include <string>
#include <vector>
#include <map>
#include <iomanip>
#define ll long long

using namespace std;

ll comb (ll n, ll k) {
    ll res = 1;
    for (ll i = k+1; i <= n; i++) {
        res *= i;
    }
    return res;
}

ll fact(int n) {
    ll res = 1;
    for (int i = 1; i <= n; i++) {
        res *= i;
    }
    return res;
}

void next_combination (vector<int> & a, int n) {
//    int d = n - (int)a.size();
    while (true) {
        for (int i = 0; i < a.size(); i++) {
            cout << a[i] << " ";
        }
        cout << endl;
        int m = -1;
        for (int i = (int)a.size()-1; i >= 0; i--) {
            if (a[i] > a.size()-i) {
                m = i;
                a[i]--;
                break;
            }
        }
        if (m == -1) {
            break;
        }
        for (int i = m+1; i < a.size(); i++) {
            a[i] = a[i-1] - 1;
        }
    }
}

int main()
{
    int n, a;
    vector<int> nums;
    cin >> n;
    vector<bool> exist(n+1, 1);
    ll res = 0;
    for (int i = 0; i < n; i++) {
        cin >> a;
        nums.push_back(a);
    }
    for (int i = 0; i < n; i++) {
        int cnt = 0;
        for (int j = 1; j < nums[i]; j++) {
            if (exist[j]) {
                cnt++;
            }
        }
        res += cnt * fact(n-1-i);
        exist[nums[i]] = false;
    }
    cout << res + 1;
}
